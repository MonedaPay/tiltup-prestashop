apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -o kube/prestashop-deployment.yaml
    kompose.version: 1.30.0 (9d8dcb518)
  creationTimestamp: null
  labels:
    io.kompose.service: mysql
  name: mysql

spec:
  ports:
    - name: "3306"
      port: 3306
      targetPort: 3306
  selector:
    io.kompose.service: mysql
status:
  loadBalancer: { }

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -o kube/prestashop-deployment.yaml
    kompose.version: 1.30.0 (9d8dcb518)
  creationTimestamp: null
  labels:
    io.kompose.service: mysql
  name: mysql

spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -o kube/prestashop-deployment.yaml
        kompose.version: 1.30.0 (9d8dcb518)
      creationTimestamp: null
      labels:
        io.kompose.network/prestashop-network: "true"
        io.kompose.service: mysql
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: prestashop
            - name: MYSQL_ROOT_PASSWORD
              value: tiltupadmin1
          image: mysql:5.7
          name: mysql
          ports:
            - containerPort: 3306
              hostPort: 3306
              protocol: TCP
          resources: { }
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: dbdata
      restartPolicy: Always
      volumes:
        - name: dbdata
          persistentVolumeClaim:
            claimName: dbdata
status: { }


---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -o kube/prestashop-deployment.yaml
    kompose.version: 1.30.0 (9d8dcb518)
    service.beta.kubernetes.io/aws-load-balancer-type: alb
    kubernetes.io/ingress.class: alb
    external-dns.alpha.kubernetes.io/hostname: prestashop.${SUBDOMAIN}.tiltup.io

  creationTimestamp: null
  labels:
    io.kompose.service: prestashop
  name: prestashop
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 80
  selector:
    io.kompose.service: prestashop
status:
  loadBalancer: { }

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-prestashop
  annotations:
    external-dns.alpha.kubernetes.io/hostname: prestashop.${SUBDOMAIN}.tiltup.io
    alb.ingress.kubernetes.io/load-balancer-name: k8s-alb-${NODE_ENV}-external
    alb.ingress.kubernetes.io/group.name: k8s-alb-${NODE_ENV}-external
    alb.ingress.kubernetes.io/group.order: '5'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-path: "/"
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/certificate-arn: ${CERTIFICATE_ARN}

spec:
  ingressClassName: alb
  rules:
    - host: prestashop.${SUBDOMAIN}.tiltup.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: prestashop
                port:
                  number: 80


---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -o kube/prestashop-deployment.yaml
    kompose.version: 1.30.0 (9d8dcb518)
  creationTimestamp: null
  labels:
    io.kompose.service: prestashop
  name: tiltup-prestashop
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: prestashop
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -o kube/prestashop-deployment.yaml
        kompose.version: 1.30.0 (9d8dcb518)
      creationTimestamp: null
      labels:
        io.kompose.network/prestashop-network: "true"
        io.kompose.service: prestashop
    spec:
      containers:
        - env:
            - name: DB_PASSWD
              value: tiltupadmin1
            - name: DB_SERVER
              value: mysql
            - name: PS_DEV_MODE
              value: "1"
            - name: PS_FOLDER_INSTALL
              value: install-dev
            - name: PS_FOLDER_ADMIN
              value: admin-dev
            - name: PS_DOMAIN
              value: prestashop.${SUBDOMAIN}.tiltup.io
            - name: PS_INSTALL_AUTO
              value: "1"
            - name: PS_ENABLE_SSL
              value: "1"
            - name: ADMIN_MAIL
              value: "test@tiltup.io"
            - name: ADMIN_PASSWD
              value: "Qwerty123!"
          image: ${ECR_HOST}/tiltup-prestashop-${NODE_ENV}:${GITVERSION_FULLSEMVER}
          name: prestashop
          ports:
            - containerPort: 80
              hostPort: 80
              protocol: TCP
          resources: { }
      #          volumeMounts:
      #            - mountPath: /var/www/html
      #              name: psdata
      #            - mountPath: /var/www/html/modules/tiltupcryptopaymentsmodule
      #              name: tiltupcryptopaymentsmodule
      restartPolicy: Always
#      volumes:
#        - name: psdata
#          persistentVolumeClaim:
#            claimName: psdata
#        - name: tiltupcryptopaymentsmodule
#          persistentVolumeClaim:
#            claimName: tiltupcryptopaymentsmodule
status: { }


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: psdata
  name: psdata

spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ""
  resources:
    requests:
      storage: 500Mi
status: { }

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: tiltupcryptopaymentsmodule
  name: tiltupcryptopaymentsmodule

spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ""
  resources:
    requests:
      storage: 500Mi
status: { }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: dbdata
  name: dbdata

spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ""
  resources:
    requests:
      storage: 500Mi
status: { }

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: efs-pv-tiltupcryptopaymentsmodule
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  storageClassName: ""
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    name: tiltupcryptopaymentsmodule
  csi:
    driver: efs.csi.aws.com
    volumeHandle: ${PERSISTENT_VOLUME_HANDLE}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: efs-pv-psdata
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  storageClassName: ""
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    name: psdata
  csi:
    driver: efs.csi.aws.com
    volumeHandle: ${PERSISTENT_VOLUME_HANDLE}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: efs-pv-mysql
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  storageClassName: ""
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    name: dbdata
  csi:
    driver: efs.csi.aws.com
    volumeHandle: ${PERSISTENT_VOLUME_HANDLE}